@00 170a // LOAD, gr7, gr0, a		// gr7=ffff. 'Guard'! End of the disordered sequence 
@01 1600 // LOAD, gr6, gr0, 0		// gr6=0
@02 140b // LOAD, gr4, gr0, b		// gr4=0032. starting at the Mem@32 to Store the ordered sequence  
@03 1100 // LOAD, gr1, gr0, 0		// gr1=0
@04 4c01 // ADDI, gr4, 0, 1			// gr4+=1
@05 1940 // STORE,gr1, gr4, 0		// 
@06 4e01 // ADDI, gr6, 0, 1			// gr6+=1
@07 4560 // ADD,  gr5, gr6, gr0		// gr5=gr6
@08 1160 // LOAD, gr1, gr6, 0		// gr2=0
@09 6017 // CMP, 0, gr1, gr7
@0a d014 // BZ, gr0, 1, 4			// JUMP to END!
@0b 4d01 // ADDI, gr5, 0, 1			// gr5+=1
@0c 1250 // LOAD, gr2, gr5, 0		//
@0d 6027 // CMP, 0, gr2, gr7
@0e d004 // BZ, gr0, 0, 4			// JUMP to Instruction_Mem @04
@0f 6012 // CMP, 0, gr1, gr2
@10 e013 // BN, gr0, 1, 3
@11 1950 // STORE,gr1, gr5,gr0		// exchange the two number (in Memory) which are comparing
@12 4120 // ADD,  gr1, gr2,gr0
@13 c00b // JUMP, 0, 0, b
@14 0800 // HALT,11'b00000000000	// END
